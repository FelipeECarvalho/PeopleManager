@using PeopleManager.Application.ViewModels
@using PeopleManager.Core
@using PeopleManager.Core.Entities
@model EmployeeViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<h3>Search for Employee</h3>
<div class="input-group mb-3">
    <input type="text" class="form-control" id="employee-search" placeholder="Search" aria-label="Search" aria-describedby="search-button">
</div>

<ul id="employee-list" class="list-group mt-3"> </ul>

@if (Model.Employees != null && Model.Employees.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Salary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Person.Name)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Employees)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Salary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Person.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

